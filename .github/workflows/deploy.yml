name: CD Pipeline (Deploy to Production)

on:
  push:
    branches:
      - production
  workflow_run:
    workflows: ["CI Pipeline (Audit, Quality, Tests)"]
    types:
      - completed
    branches:
      - production

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    env:
      APP_ENV: prod
      APP_DEBUG: 0

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check SSH secrets
        id: check-secrets
        run: |
          if [ -z "${{ secrets.SSH_HOST }}" ] || [ -z "${{ secrets.SSH_USERNAME }}" ] || [ -z "${{ secrets.SSH_PRIVATE_KEY }}" ]; then
            echo "missing=true" >> $GITHUB_OUTPUT
            echo "❌ SSH secrets are not configured"
          else
            echo "missing=false" >> $GITHUB_OUTPUT
            echo "✅ SSH secrets configured"
          fi

      - name: Déployer sur le serveur (sans deploy.sh)
        if: steps.check-secrets.outputs.missing == 'false'
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          timeout: 300s
          command_timeout: 120s
          script: |
            set -e

            echo "📁 On est dans /monapp/symfony-docker-ci-cd"
            cd /monapp/symfony-docker-ci-cd

            echo "⚙️ Configuration git safe.directory"
            git config --global --add safe.directory /monapp/symfony-docker-ci-cd

            echo "⬇️ Récupération et reset du code à la branche production"
            git fetch origin production
            git reset --hard origin/production

            echo "📦 Installation / Mise à jour des dépendances (exemple avec composer)"
            composer install --no-dev --optimize-autoloader

            echo "🧹 Nettoyage cache"
            php bin/console cache:clear --env=prod

            echo "🔧 Migration base de données (si besoin)"
            php bin/console doctrine:migrations:migrate --no-interaction --env=prod

            echo "🚀 Redémarrage des services docker"
            docker-compose -f compose.yaml restart php nginx

            echo "✅ Déploiement terminé avec succès"
