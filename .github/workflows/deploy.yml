name: CD Pipeline (Deploy to Production)

on:
  push:
    branches:
      - production
  workflow_run:
    workflows: ["CI Pipeline (Audit, Quality, Tests)"]
    types:
      - completed
    branches:
      - production

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    env:
      APP_ENV: ${{ secrets.APP_ENV }}
      APP_DEBUG: 0

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Vérifier la présence des secrets SSH
        id: check-secrets
        run: |
          if [ -z "${{ secrets.SSH_HOST }}" ] || [ -z "${{ secrets.SSH_USERNAME }}" ] || [ -z "${{ secrets.SSH_PRIVATE_KEY }}" ]; then
            echo "missing=true" >> $GITHUB_OUTPUT
            echo "❌ SSH secrets are not configured"
          else
            echo "missing=false" >> $GITHUB_OUTPUT
            echo "✅ SSH secrets configured"
          fi

#      - name: Copier les fichiers sur le serveur
#        if: steps.check-secrets.outputs.missing == 'false'
#        uses: appleboy/scp-action@v0.1.3
#        with:
#          host: ${{ secrets.SSH_HOST }}
#          username: ${{ secrets.SSH_USERNAME }}
#          port: ${{ secrets.SSH_PORT }}
#          key: ${{ secrets.SSH_PRIVATE_KEY }}
#          source: "."
#          target: "/symfony-docker-ci-cd"
#          strip_components: 1
#          overwrite: true

      - name: Déployer sur le serveur (docker exec)
        if: steps.check-secrets.outputs.missing == 'false'
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          timeout: 300s
          command_timeout: 120s
          script: |
            set -e
            echo " Déploiement dans le container PHP..."

            echo " Liste des containers Docker en cours:"
            docker ps
            docker exec -i symfony-docker-ci-cd_php_1 sh -c "
              cd /var/www && \
              git config --global --add safe.directory /var/www && \
              git reset --hard HEAD && \
              git pull origin production && \
              composer install --no-dev --optimize-autoloader && \
              php bin/console cache:clear --env=prod && \
              php bin/console doctrine:migrations:migrate --no-interaction && \
              php bin/console asset-map:compile && \
              php bin/console assets:install --symlink --relative && \
              chown -R www-data:www-data /var/www/var
            "
            echo "Déploiement terminé avec succès"

