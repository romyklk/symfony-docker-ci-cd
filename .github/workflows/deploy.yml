name: CD Pipeline (Deploy to Production)

on:
  push:
    branches:
      - production
  workflow_run:
    workflows: ["CI Pipeline (Audit, Quality, Tests)"]
    types:
      - completed
    branches:
      - production

jobs:
  check-ci:
    name: Check CI Status
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.ref == 'refs/heads/production' }}
    steps:
      - name: CI Status Check
        run: |
          if [ "${{ github.event_name }}" = "workflow_run" ]; then
            echo "‚úÖ CI Pipeline completed successfully"
          else
            echo "üîÑ Direct push to production branch"
          fi

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: check-ci
    env:
      APP_ENV: prod
      APP_DEBUG: 0
    steps:
      - name: Check SSH secrets
        id: check-secrets
        run: |
          if [ -z "${{ secrets.PROD_SSH_HOST }}" ] || [ -z "${{ secrets.PROD_SSH_USERNAME }}" ] || [ -z "${{ secrets.PROD_SSH_PRIVATE_KEY }}" ]; then
            echo "missing=true" >> $GITHUB_OUTPUT
            echo "‚ùå SSH secrets are not configured"
            echo "Please configure the following secrets in repository settings:"
            echo "- PROD_SSH_HOST"
            echo "- PROD_SSH_USERNAME" 
            echo "- PROD_SSH_PORT (optional, defaults to 22)"
            echo "- PROD_SSH_PRIVATE_KEY"
          else
            echo "missing=false" >> $GITHUB_OUTPUT
            echo "‚úÖ SSH secrets are configured"
          fi

      - name: Deploy to Production Server
        if: steps.check-secrets.outputs.missing == 'false'
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME  }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          timeout: 300s
          command_timeout: 60s
          script: |
            set -e
            echo "Connect√© √† $(hostname) $(whoami)"
            echo "D√©ploiement de l'application Symfony..."
            pwd
            echo "V√©rification de la pr√©sence du dossier de l'application..."
            ls -la /monapp

