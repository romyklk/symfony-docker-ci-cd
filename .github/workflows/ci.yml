name: CI Pipeline (Audit, Quality, Tests)

on:
  push:
    branches:
      - main
      - production
      - develop
  pull_request:
    branches:
      - main
      - production

jobs:
  audit:
    name: Security Audit
    runs-on: ubuntu-latest
    env:
      APP_ENV: test
      APP_DEBUG: 0
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          tools: composer:v2

      - name: Get composer cache directory
        run: echo "COMPOSER_CACHE_DIR=$(composer config cache-dir)" >> $GITHUB_ENV

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: php8.3-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: php8.3-composer-

      - name: Install dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Run security audit
        run: |
          composer audit --no-dev --abandoned=report --ignore-severity=low --format=json --no-ansi > /tmp/security-audit.json

      - name: Upload audit report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: audit-report-${{ github.run_id }}
          path: /tmp/security-audit.json
          retention-days: 30

  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    env:
      APP_ENV: test
      APP_DEBUG: 0
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          tools: composer:v2

      - name: Get composer cache directory
        run: echo "COMPOSER_CACHE_DIR=$(composer config cache-dir)" >> $GITHUB_ENV

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: php8.3-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: php8.3-composer-

      - name: Install dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Run code quality checks
        run: composer app:code-quality

  tests:
    name: Tests
    runs-on: ubuntu-latest
    env:
      APP_ENV: test
      APP_DEBUG: 0

    needs: [audit, quality]
    if: ${{ always() && needs.audit.result == 'success' && needs.quality.result == 'success' }}

    services:
      database:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: symfony_ci_cd_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          tools: composer:v2

      - name: Get composer cache directory
        run: echo "COMPOSER_CACHE_DIR=$(composer config cache-dir)" >> $GITHUB_ENV

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: php8.3-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: php8.3-composer-

      - name: Install dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Run tests
        run: composer app:tests
        env:
          APP_ENV: test
          DATABASE_URL: "mysql://root:root@127.0.0.1:3306/symfony_ci_cd_test?serverVersion=8.0.32&charset=utf8mb4"

  # Job de notification pour indiquer que le CI est passé
  ci-success:
    name: CI Success
    runs-on: ubuntu-latest
    needs: [audit, quality, tests]
    if: ${{ always() && needs.audit.result == 'success' && needs.quality.result == 'success' && needs.tests.result == 'success' }}
    steps:
      - name: CI Pipeline Success
        run: |
          echo "✅ All CI checks passed successfully!"
          echo "- Security audit: ✅"
          echo "- Code quality: ✅"  
          echo "- Tests: ✅"
          echo "Ready for deployment on production branch."
